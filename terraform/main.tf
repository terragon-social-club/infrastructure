variable "stripe_api_key" {}

# SSH Tokens
# This is managed thru Terraform Cloud now
variable "digitalocean_api_token" {}
variable "terraform_cloud_api_token" {}
variable "mwk_key_fingerprint" {
  type = string
}

# Infrastructure Provider Tokens
provider "digitalocean" {
  token = var.digitalocean_api_token
}

provider "tfe" {
  hostname = "app.terraform.io"
  token = var.terraform_cloud_api_token
}

# Autogenerated Top Level SSH Key
resource "tls_private_key" "autogenerated" {
  algorithm = "RSA"
}

resource "digitalocean_ssh_key" "autogenerated" {
  name = "Salt Master"
  public_key = tls_private_key.autogenerated.public_key_openssh
}

variable "base_image" {
  default = "freebsd-12-x64-zfs"
}

variable "cluster_makeup" {
  default = {
    salt_master = {
      size = "s-3vcpu-1gb"
    }

    couchdb = {
      couch_size = "c-32"
      node_count = 0
      proxy_provisioned = false
      proxy_size = "c-32"
    }

    logging = {
      logstash_size = "s-3vcpu-1gb"
      logstash_node_count = 0
      elastic_size = "s-4vcpu-8gb"
      elastic_node_count = 0
      kibana_size = "s-3vcpu-1gb"
      kibana_proxy_size = "s-1vcpu-1gb"
    }

    api = {
      node_count = 0
    }

  }

}

module "Mail" {
  source = "./modules/mail"
}

module "Salt_Master" {
  source = "./modules/salt-master"
  name = "saltm"
  keys = [
    var.mwk_key_fingerprint,                        # Salt Master is the only server accesible by ssh directly by staff. Enforced by key auth & firewall rules
    digitalocean_ssh_key.autogenerated.fingerprint
  ]

  disk_size = 1
  image = var.base_image
  size = var.cluster_makeup.salt_master.size
  domain_id = "terragon.us"
  autogenerated_ssh_private_key = tls_private_key.autogenerated.private_key_pem
}

module "ELK" {
  source = "./modules/elk"
  image = var.base_image

  logstash_size = var.cluster_makeup.logging.logstash_size
  logstash_workers = var.cluster_makeup.logging.logstash_node_count
  elasticsearch_workers = var.cluster_makeup.logging.elastic_node_count
  elasticsearch_size = var.cluster_makeup.logging.elastic_size
  kibana_size = var.cluster_makeup.logging.kibana_size
  kibana_proxy_size = var.cluster_makeup.logging.kibana_proxy_size

  all_droplet_ips = concat(
    [module.Salt_Master.private_ip_address],
    module.CouchDB.couchdb_node_private_ip_addresses,
    module.CouchDB.haproxy_private_ip_addresses,
    module.NodeJSApi.pm2_node_private_ip_addresses,
    module.NodeJSApi.haproxy_private_ip_addresses
  )

  salt_master_droplet_id = module.Salt_Master.droplet_id
  salt_master_private_ip_address = module.Salt_Master.private_ip_address
  salt_master_public_ip_address = module.Salt_Master.public_ip_address
  autogenerated_ssh_private_key = tls_private_key.autogenerated.private_key_pem

  ssh_keys = [
    digitalocean_ssh_key.autogenerated.fingerprint,
    module.Salt_Master.ssh_fingerprint
  ]

}

module "CouchDB" {
  source = "./modules/couchdb"
  image = var.base_image

  couchdb_size = var.cluster_makeup.couchdb.couch_size
  proxy_size = var.cluster_makeup.couchdb.proxy_size
  couchdb_replicas = var.cluster_makeup.couchdb.node_count
  couchdb_proxy_online = var.cluster_makeup.couchdb.proxy_provisioned

  salt_master_droplet_id = module.Salt_Master.droplet_id
  salt_master_private_ip_address = module.Salt_Master.private_ip_address
  salt_master_public_ip_address = module.Salt_Master.public_ip_address
  autogenerated_ssh_private_key = tls_private_key.autogenerated.private_key_pem

  ssh_keys = [
    digitalocean_ssh_key.autogenerated.fingerprint,
    module.Salt_Master.ssh_fingerprint
  ]

}

module "NodeJSApi" {
  source = "./modules/nodejsapi"
  image = var.base_image

  pm2_nodes = var.cluster_makeup.api.node_count
  couchdb_user = module.CouchDB.user
  couchdb_pass = module.CouchDB.pass
  stripe_api_key = var.stripe_api_key
  couchdb_droplet_ids = module.CouchDB.droplet_ids

  salt_master_droplet_id = module.Salt_Master.droplet_id
  salt_master_private_ip_address = module.Salt_Master.private_ip_address
  salt_master_public_ip_address = module.Salt_Master.public_ip_address
  autogenerated_ssh_private_key = tls_private_key.autogenerated.private_key_pem

  ssh_keys = [
    digitalocean_ssh_key.autogenerated.fingerprint,
    module.Salt_Master.ssh_fingerprint
  ]

}
