variable "salt_master_droplet_id" {}
variable "salt_master_private_ip_address" {}
variable "salt_master_public_ip_address" {}
variable "autogenerated_ssh_private_key" {}

variable "ssh_keys" {}
variable "image" {}
variable "tld" {}
variable "size" {}

module "Apache" {
  source = "../salt-minion"
  node_count = 1
  provision = true
  name = "www"
  size = var.size
  domain_id = var.tld
  custom_fqdn = "www"
  keys = var.ssh_keys
  image = var.image

  salt_minion_roles = ["angular", "apache", "minion"]
  salt_master_droplet_id = var.salt_master_droplet_id
  salt_master_private_ip_address = var.salt_master_private_ip_address
  salt_master_public_ip_address = var.salt_master_public_ip_address
  autogenerated_ssh_private_key = var.autogenerated_ssh_private_key
}

# Round robin dns for haproxy instances
resource "digitalocean_record" "apache_www" {
  domain = var.tld
  type = "A"
  name = "www"
  value = module.Apache.salt_minion_public_ip_addresses[0]
}

resource "digitalocean_firewall" "world_to_angular_apache" {
  name = "World-To-Angular-Apache"
  droplet_ids = module.Apache.droplet_ids

  inbound_rule {
    protocol = "tcp"
    port_range = "80"
    source_addresses = ["0.0.0.0/0"]
  }

  inbound_rule {
    protocol = "tcp"
    port_range = "443"
    source_addresses = ["0.0.0.0/0"]
  }

}
