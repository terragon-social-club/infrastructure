input {
  beats {
    port => 5044
    host => "{{ salt['network.interface_ip']('vtnet1') }}"
  }
  
}

filter {
  if [log_src] == "fail2ban" {
    grok {
      match => {
        message => "%{TIMESTAMP_ISO8601:timestamp} %{WORD:log_src}.%{WORD:src_action} *\[%{INT:fail2ban_digit}\]: %{LOGLEVEL:loglevel} *\[%{NOTSPACE:service}\] %{WORD:ban_status} %{IP:clientip}"
        add_tag => ["ban"]
      }

    }

    geoip {
      source => "clientip"
      target => "geoip"
      database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
		  add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }

  }

}

output {
  elasticsearch {
    hosts => [{% for address in salt['mine.get']('roles:elasticsearch', 'local_ip', tgt_type='grain').items() %}"{{ address[1] }}:9200"{{ "," if not loop.last else "" }}{% endfor %}]
  }

}

